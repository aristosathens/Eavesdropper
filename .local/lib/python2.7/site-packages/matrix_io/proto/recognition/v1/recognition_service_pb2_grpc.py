# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from matrix_io.proto.recognition.v1 import recognition_service_pb2 as matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2


class RecognitionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StoreFeatureDescriptors = channel.unary_unary(
        '/matrix_io.recognition.v1.RecognitionService/StoreFeatureDescriptors',
        request_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.StoreFeatureDescriptorsRequest.SerializeToString,
        response_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.StoreFeatureDescriptorsResponse.FromString,
        )
    self.GetFeatureDescriptors = channel.unary_unary(
        '/matrix_io.recognition.v1.RecognitionService/GetFeatureDescriptors',
        request_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorsRequest.SerializeToString,
        response_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorsResponse.FromString,
        )
    self.DeleteFeatureDescriptors = channel.unary_unary(
        '/matrix_io.recognition.v1.RecognitionService/DeleteFeatureDescriptors',
        request_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.DeleteFeatureDescriptorsRequest.SerializeToString,
        response_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.DeleteFeatureDescriptorsResponse.FromString,
        )
    self.GetFeatureDescriptorTags = channel.unary_unary(
        '/matrix_io.recognition.v1.RecognitionService/GetFeatureDescriptorTags',
        request_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorTagsRequest.SerializeToString,
        response_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorTagsResponse.FromString,
        )
    self.Recognize = channel.unary_unary(
        '/matrix_io.recognition.v1.RecognitionService/Recognize',
        request_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.RecognizeRequest.SerializeToString,
        response_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.RecognizeResponse.FromString,
        )


class RecognitionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StoreFeatureDescriptors(self, request, context):
    """Store a descriptor

    The received message may:
    - contain the calculated descriptors
    - contain a VisionRequest with a populated ImageList field
    - contain a VisionRequest with a populated Video field

    The tags field is mandatory for a store call to be successful.
    When device_id field is set, the descriptor will be scoped
    to the given device IDs, meaning that only Recognize() requests from such
    device IDs will match those descriptors.

    Returned Message
    When the save is successful, a list of unique string UUIDs identifying
    the stored descriptors
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeatureDescriptors(self, request, context):
    """Obtain a list of descriptors

    Returned Message
    A list of descriptors according to provided uuids, tags and device_id.
    if both uuid and device_id are defined, only descriptors
    associated with the given device ID will be returned. The same
    applies for tags and device_id.

    If no uuid, tags or devices_id fields are defined, all available
    descriptor will be returned.

    An empty list will be returned if no descriptors are found
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteFeatureDescriptors(self, request, context):
    """Delete descriptors saved under a user account

    Method will delete all descriptors matching provided uuids or tags.
    When matching tags, descriptors matching any tag will be returned.

    When a device_id is provided, only those associated with the device will
    be deleted.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeatureDescriptorTags(self, request, context):
    """Request a set of all available descriptor tags for the user account
    grouped by device id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Recognize(self, request, context):
    """Request a descriptor match against recognition services.

    For recognize requests to be possible, descriptors must first be
    stored (see StoreFeatureDescriptors method).

    Recognize calls can include a variety of fields:
    - when feature_descriptor_list field is set, it will be used to perform the
    match against stored descriptors.
    - when vision_request field is set, descriptors will first be calculated for
    the images and then matched against stored descriptors.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RecognitionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StoreFeatureDescriptors': grpc.unary_unary_rpc_method_handler(
          servicer.StoreFeatureDescriptors,
          request_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.StoreFeatureDescriptorsRequest.FromString,
          response_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.StoreFeatureDescriptorsResponse.SerializeToString,
      ),
      'GetFeatureDescriptors': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeatureDescriptors,
          request_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorsRequest.FromString,
          response_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorsResponse.SerializeToString,
      ),
      'DeleteFeatureDescriptors': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteFeatureDescriptors,
          request_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.DeleteFeatureDescriptorsRequest.FromString,
          response_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.DeleteFeatureDescriptorsResponse.SerializeToString,
      ),
      'GetFeatureDescriptorTags': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeatureDescriptorTags,
          request_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorTagsRequest.FromString,
          response_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.GetFeatureDescriptorTagsResponse.SerializeToString,
      ),
      'Recognize': grpc.unary_unary_rpc_method_handler(
          servicer.Recognize,
          request_deserializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.RecognizeRequest.FromString,
          response_serializer=matrix__io_dot_recognition_dot_v1_dot_recognition__service__pb2.RecognizeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'matrix_io.recognition.v1.RecognitionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
